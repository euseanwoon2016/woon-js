/*! For license information please see main.bundle.js.LICENSE.txt */
(()=>{"use strict";var t,n={"./src/style.css":(t,n,e)=>{e.r(n)},"./src/Woon.ts":(t,n,e)=>{e.r(n),e.d(n,{Component:()=>s,default:()=>c,w:()=>l,Heading:()=>u});var o,r=(o=function(t,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}o(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),i=function(){return(i=Object.assign||function(t){for(var n,e=1,o=arguments.length;e<o;e++)for(var r in n=arguments[e])Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r]);return t}).apply(this,arguments)},s=function(){function t(t){this.props={},this.state={},this.onChange=function(){},this.props=t,this.state.props=t,this.init()}return t.prototype.init=function(){},t.prototype.setState=function(t,n){var e;return this.state=i(i({},this.state),((e={})[t]=n,e)),this.onChange(),this.state[t]},t.prototype.getState=function(t){return this.state[t]},t}();const c=function(){function t(t,n){var e=this;return this.entry=t,this.component=n,Object.defineProperty(n,"onChange",{value:function(){e.render()},writable:!1}),this.render()}return t.prototype.render=function(){for(;this.entry.firstChild;)this.entry.removeChild(this.entry.firstChild);return this.entry.appendChild(this.component.build()),this},t}();function l(t){var n=t.tag,e=t.attributes,o=t.styles,r=t.text,i=t.children,c=t.events,l=document.createElement(n);return null!=r&&l.appendChild(document.createTextNode(r)),null!=e&&Object.keys(e).forEach((function(t){l.setAttribute(t,e[t])})),null!=o&&Object.keys(o).forEach((function(t){l.style[t]=o[t]})),null!=i&&i.forEach((function(t){t instanceof HTMLElement?l.appendChild(t):t instanceof s&&l.appendChild(t.build())})),null!=c&&Object.keys(c).forEach((function(t){l.addEventListener(t,(function(n){return c[t](n,l)}))})),l}var u=function(t){function n(n){return t.call(this,n)||this}return r(n,t),n.prototype.build=function(){return l({tag:"h"+this.props.level,text:this.props.text})},n}(s)},"./src/components/Body.ts":(t,n,e)=>{e.r(n),e.d(n,{default:()=>c});var o,r=e("./src/Woon.ts"),i=e("./src/components/InfoGrid.ts"),s=(o=function(t,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}o(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)});const c=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),n.prototype.build=function(){return(0,r.w)({tag:"div",styles:{width:"70%",maxWidth:"1200px",backgroundColor:"hsl(0, 0%, 90%)",margin:"0 auto",color:"white",display:"grid",gridTemplateRows:"4fr 3fr"},children:[(0,r.w)({tag:"div",styles:{width:"100%",backgroundColor:"hsl(211, 75%, 50%)",display:"flex",justifyContent:"center",alignItems:"center",flexDirection:"column"},children:[(0,r.w)({tag:"h1",text:"Hello, world!",styles:{fontSize:"8rem"}}),(0,r.w)({tag:"span",text:"This site was made using Woon.js",styles:{fontSize:"1.5rem"}})]}),new i.default]})},n}(r.Component)},"./src/components/InfoGrid.ts":(t,n,e)=>{e.r(n),e.d(n,{default:()=>s});var o,r=e("./src/Woon.ts"),i=(o=function(t,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}o(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)});const s=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return i(n,t),n.prototype.build=function(){return(0,r.w)({tag:"div",styles:{display:"grid",gridTemplateColumns:"repeat(2, 1fr)"},children:[(0,r.w)({tag:"a",styles:{backgroundColor:"hsl(211, 80%, 58%)",justifyContent:"center",alignItems:"center",display:"flex",color:"#fff",textDecoration:"none"},attributes:{href:"https://github.com/euseanwoon2016/woon-js"},children:[(0,r.w)({tag:"div",text:"View on GitHub",styles:{fontSize:"2rem",fontWeight:"bold"}})]}),(0,r.w)({tag:"a",styles:{backgroundColor:"hsl(211, 80%, 47%)",justifyContent:"center",alignItems:"center",display:"flex",color:"#fff",textDecoration:"none"},attributes:{href:"https://github.com/euseanwoon2016/woon-js/wiki"},children:[(0,r.w)({tag:"div",text:"View Wiki",styles:{fontSize:"2rem",fontWeight:"bold"}})]})]})},n}(r.Component)},"./src/components/NavBar.ts":(t,n,e)=>{e.r(n),e.d(n,{default:()=>s});var o,r=e("./src/Woon.ts"),i=(o=function(t,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}o(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)});const s=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return i(n,t),n.prototype.build=function(){return(0,r.w)({tag:"nav",styles:{width:"100%",backgroundColor:"hsl(211, 100%, 56%)",color:"hsl(0, 0%, 96%)"},children:[(0,r.w)({tag:"nav",styles:{width:"70%",maxWidth:"1200px",padding:"2rem",margin:"0 auto",display:"flex",justifyContent:"space-between",alignItems:"center"},children:[(0,r.w)({tag:"h1",styles:{textDecoration:"none",fontSize:"1.5em",fontWeight:"bold",textAlign:"center",padding:"0px",margin:"0px",border:"0px"},text:this.props.title})]})]})},n}(r.Component)},"./src/index.ts":(t,n,e)=>{e.r(n),e("./src/style.css");var o,r=e("./src/components/Body.ts"),i=e("./src/components/NavBar.ts"),s=e("./src/Woon.ts"),c=(o=function(t,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}o(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),l=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return c(n,t),n.prototype.init=function(){},n.prototype.build=function(){return(0,s.w)({tag:"div",styles:{backgroundColor:"hsl(0, 0%, 96%)",width:"100%",height:"100%",display:"grid",gridTemplateRows:"auto 1fr"},children:[new i.default({title:"Woon.js Framework"}),new r.default]})},n}(s.Component);new s.default(document.querySelector("#app"),new l)}},e={};function o(t){var r=e[t];if(void 0!==r)return r.exports;var i=e[t]={exports:{}};return n[t](i,i.exports,o),i.exports}o.m=n,t=[],o.O=(n,e,r,i)=>{if(!e){var s=1/0;for(a=0;a<t.length;a++){for(var[e,r,i]=t[a],c=!0,l=0;l<e.length;l++)(!1&i||s>=i)&&Object.keys(o.O).every((t=>o.O[t](e[l])))?e.splice(l--,1):(c=!1,i<s&&(s=i));if(c){t.splice(a--,1);var u=r();void 0!==u&&(n=u)}}return n}i=i||0;for(var a=t.length;a>0&&t[a-1][2]>i;a--)t[a]=t[a-1];t[a]=[e,r,i]},o.d=(t,n)=>{for(var e in n)o.o(n,e)&&!o.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:n[e]})},o.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{var t={main:0,styles:0};o.O.j=n=>0===t[n];var n=(n,e)=>{var r,i,[s,c,l]=e,u=0;if(s.some((n=>0!==t[n]))){for(r in c)o.o(c,r)&&(o.m[r]=c[r]);if(l)var a=l(o)}for(n&&n(e);u<s.length;u++)i=s[u],o.o(t,i)&&t[i]&&t[i][0](),t[s[u]]=0;return o.O(a)},e=self.webpackChunktypescript_webpack=self.webpackChunktypescript_webpack||[];e.forEach(n.bind(null,0)),e.push=n.bind(null,e.push.bind(e))})();var r=o.O(void 0,["styles"],(()=>o("./src/index.ts")));r=o.O(r)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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N0JELEVBQWdCQyxHQUd4RCxJQUFJQyxFQUF1QixDQUFDQyxFQUE0QkMsS0FDdkQsSUFHSXJDLEVBQVVrQyxHQUhUekIsRUFBVTZCLEVBQWFDLEdBQVdGLEVBR2hCdkIsRUFBSSxFQUMzQixHQUFHTCxFQUFTK0IsTUFBTUMsR0FBZ0MsSUFBeEJSLEVBQWdCUSxLQUFhLENBQ3RELElBQUl6QyxLQUFZc0MsRUFDWnZDLEVBQW9Cd0IsRUFBRWUsRUFBYXRDLEtBQ3JDRCxFQUFvQk8sRUFBRU4sR0FBWXNDLEVBQVl0QyxJQUdoRCxHQUFHdUMsRUFBUyxJQUFJL0IsRUFBUytCLEVBQVF4QyxHQUdsQyxJQURHcUMsR0FBNEJBLEVBQTJCQyxHQUNyRHZCLEVBQUlMLEVBQVNNLE9BQVFELElBQ3pCb0IsRUFBVXpCLEVBQVNLLEdBQ2hCZixFQUFvQndCLEVBQUVVLEVBQWlCQyxJQUFZRCxFQUFnQkMsSUFDckVELEVBQWdCQyxHQUFTLEtBRTFCRCxFQUFnQnhCLEVBQVNLLElBQU0sRUFFaEMsT0FBT2YsRUFBb0JRLEVBQUVDLElBRzFCa0MsRUFBcUJDLEtBQXFDLCtCQUFJQSxLQUFxQyxnQ0FBSyxHQUM1R0QsRUFBbUIzRSxRQUFRb0UsRUFBcUJTLEtBQUssS0FBTSxJQUMzREYsRUFBbUJHLEtBQU9WLEVBQXFCUyxLQUFLLEtBQU1GLEVBQW1CRyxLQUFLRCxLQUFLRixRQzlDdkYsSUFBSUksRUFBc0IvQyxFQUFvQlEsT0FBRUwsRUFBVyxDQUFDLFdBQVcsSUFBT0gsRUFBb0Isb0JBQ2xHK0MsRUFBc0IvQyxFQUFvQlEsRUFBRXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHlwZXNjcmlwdC13ZWJwYWNrL3dlYnBhY2svcnVudGltZS9jaHVuayBsb2FkZWQiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdC13ZWJwYWNrLy4vc3JjL1dvb24udHMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdC13ZWJwYWNrLy4vc3JjL2NvbXBvbmVudHMvQm9keS50cyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LXdlYnBhY2svLi9zcmMvY29tcG9uZW50cy9JbmZvR3JpZC50cyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LXdlYnBhY2svLi9zcmMvY29tcG9uZW50cy9OYXZCYXIudHMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdC13ZWJwYWNrLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFjay93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LXdlYnBhY2svd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFjay93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFjay93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFjay93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LXdlYnBhY2svd2VicGFjay9zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkZWZlcnJlZCA9IFtdO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5PID0gKHJlc3VsdCwgY2h1bmtJZHMsIGZuLCBwcmlvcml0eSkgPT4ge1xuXHRpZihjaHVua0lkcykge1xuXHRcdHByaW9yaXR5ID0gcHJpb3JpdHkgfHwgMDtcblx0XHRmb3IodmFyIGkgPSBkZWZlcnJlZC5sZW5ndGg7IGkgPiAwICYmIGRlZmVycmVkW2kgLSAxXVsyXSA+IHByaW9yaXR5OyBpLS0pIGRlZmVycmVkW2ldID0gZGVmZXJyZWRbaSAtIDFdO1xuXHRcdGRlZmVycmVkW2ldID0gW2NodW5rSWRzLCBmbiwgcHJpb3JpdHldO1xuXHRcdHJldHVybjtcblx0fVxuXHR2YXIgbm90RnVsZmlsbGVkID0gSW5maW5pdHk7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgZGVmZXJyZWQubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgW2NodW5rSWRzLCBmbiwgcHJpb3JpdHldID0gZGVmZXJyZWRbaV07XG5cdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG5cdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBjaHVua0lkcy5sZW5ndGg7IGorKykge1xuXHRcdFx0aWYgKChwcmlvcml0eSAmIDEgPT09IDAgfHwgbm90RnVsZmlsbGVkID49IHByaW9yaXR5KSAmJiBPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLk8pLmV2ZXJ5KChrZXkpID0+IChfX3dlYnBhY2tfcmVxdWlyZV9fLk9ba2V5XShjaHVua0lkc1tqXSkpKSkge1xuXHRcdFx0XHRjaHVua0lkcy5zcGxpY2Uoai0tLCAxKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZ1bGZpbGxlZCA9IGZhbHNlO1xuXHRcdFx0XHRpZihwcmlvcml0eSA8IG5vdEZ1bGZpbGxlZCkgbm90RnVsZmlsbGVkID0gcHJpb3JpdHk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmKGZ1bGZpbGxlZCkge1xuXHRcdFx0ZGVmZXJyZWQuc3BsaWNlKGktLSwgMSlcblx0XHRcdHZhciByID0gZm4oKTtcblx0XHRcdGlmIChyICE9PSB1bmRlZmluZWQpIHJlc3VsdCA9IHI7XG5cdFx0fVxuXHR9XG5cdHJldHVybiByZXN1bHQ7XG59OyIsImV4cG9ydCBpbnRlcmZhY2UgQ29tcG9uZW50UHJvcHMgZXh0ZW5kcyBQYXJ0aWFsPGFueT4ge1xuICBjaGlsZHJlbj86IENvbXBvbmVudFtdO1xufVxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ29tcG9uZW50IHtcbiAgcHJvdGVjdGVkIHByb3BzOiBhbnkgPSB7fTtcbiAgcHJpdmF0ZSBzdGF0ZTogYW55ID0ge307XG4gIHByaXZhdGUgb25DaGFuZ2U6ICgpID0+IHZvaWQgPSAoKSA9PiB7fTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcz86IGFueSkge1xuICAgIHRoaXMucHJvcHMgPSBwcm9wcztcbiAgICB0aGlzLnN0YXRlWydwcm9wcyddID0gcHJvcHM7XG5cbiAgICB0aGlzLmluaXQoKTtcbiAgfVxuXG4gIGluaXQoKTogdm9pZCB7fVxuXG4gIGFic3RyYWN0IGJ1aWxkKCk6IEhUTUxFbGVtZW50O1xuXG4gIHNldFN0YXRlKGtleTogc3RyaW5nLCB2YWx1ZTogYW55KTogYW55IHtcbiAgICB0aGlzLnN0YXRlID0geyAuLi50aGlzLnN0YXRlLCBba2V5XTogdmFsdWUgfTtcbiAgICB0aGlzLm9uQ2hhbmdlKCk7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGVba2V5XTtcbiAgfVxuXG4gIGdldFN0YXRlKGtleTogc3RyaW5nKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZVtrZXldO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdvb24ge1xuICBjb21wb25lbnQ6IENvbXBvbmVudDtcbiAgZW50cnk6IEhUTUxFbGVtZW50O1xuICBtb3VudGVkRWxlbWVudDogSFRNTEVsZW1lbnQ7XG5cbiAgY29uc3RydWN0b3IoZW50cnk6IEhUTUxFbGVtZW50LCBjb21wb25lbnQ6IENvbXBvbmVudCkge1xuICAgIHRoaXMuZW50cnkgPSBlbnRyeTtcbiAgICB0aGlzLmNvbXBvbmVudCA9IGNvbXBvbmVudDtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb21wb25lbnQsICdvbkNoYW5nZScsIHtcbiAgICAgIHZhbHVlOiAoKSA9PiB7XG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgICB9LFxuICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLnJlbmRlcigpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHdoaWxlICh0aGlzLmVudHJ5LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHRoaXMuZW50cnkucmVtb3ZlQ2hpbGQodGhpcy5lbnRyeS5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICB0aGlzLmVudHJ5LmFwcGVuZENoaWxkKHRoaXMuY29tcG9uZW50LmJ1aWxkKCkpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmludGVyZmFjZSBDb21wb25lbnRCdWlsZGVyUHJvcHMge1xuICB0YWc6IHN0cmluZztcbiAgYXR0cmlidXRlczogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfTtcbiAgc3R5bGVzOiBQYXJ0aWFsPENTU1N0eWxlRGVjbGFyYXRpb24+O1xuICB0ZXh0OiBzdHJpbmc7XG4gIGNoaWxkcmVuOiAoSFRNTEVsZW1lbnQgfCBDb21wb25lbnQpW107XG4gIGV2ZW50czogeyBba2V5OiBzdHJpbmddOiAoZXZlbnQ6IEV2ZW50LCBlbGVtZW50OiBIVE1MRWxlbWVudCkgPT4gdm9pZCB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdyh7IHRhZywgYXR0cmlidXRlcywgc3R5bGVzLCB0ZXh0LCBjaGlsZHJlbiwgZXZlbnRzIH06IFBhcnRpYWw8Q29tcG9uZW50QnVpbGRlclByb3BzPik6IEhUTUxFbGVtZW50IHtcbiAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcblxuICBpZiAodGV4dCAhPSBudWxsKSB7XG4gICAgZWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0ZXh0KSk7XG4gIH1cblxuICBpZiAoYXR0cmlidXRlcyAhPSBudWxsKSB7XG4gICAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICBpZiAoc3R5bGVzICE9IG51bGwpIHtcbiAgICBPYmplY3Qua2V5cyhzdHlsZXMpLmZvckVhY2goKGtleTogYW55KSA9PiB7XG4gICAgICBlbGVtZW50LnN0eWxlW2tleV0gPSBzdHlsZXNba2V5XTtcbiAgICB9KTtcbiAgfVxuXG4gIGlmIChjaGlsZHJlbiAhPSBudWxsKSB7XG4gICAgY2hpbGRyZW4uZm9yRWFjaCgoY2hpbGQpID0+IHtcbiAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQoY2hpbGQpO1xuICAgICAgfSBlbHNlIGlmIChjaGlsZCBpbnN0YW5jZW9mIENvbXBvbmVudCkge1xuICAgICAgICBlbGVtZW50LmFwcGVuZENoaWxkKGNoaWxkLmJ1aWxkKCkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgaWYgKGV2ZW50cyAhPSBudWxsKSB7XG4gICAgT2JqZWN0LmtleXMoZXZlbnRzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihrZXksIChlKSA9PiBldmVudHNba2V5XShlLCBlbGVtZW50KSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZWxlbWVudDtcbn1cblxuLy8gUHJlbWFkZSBDb21wb25lbnRzXG5pbnRlcmZhY2UgSGVhZGluZ0NvbXBvbmVudFByb3BzIGV4dGVuZHMgQ29tcG9uZW50UHJvcHMge1xuICBsZXZlbDogbnVtYmVyO1xuICB0ZXh0OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBIZWFkaW5nIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcHJvdGVjdGVkIHByb3BzOiBIZWFkaW5nQ29tcG9uZW50UHJvcHM7XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IEhlYWRpbmdDb21wb25lbnRQcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuXG4gIGJ1aWxkKCk6IEhUTUxFbGVtZW50IHtcbiAgICByZXR1cm4gdyh7XG4gICAgICB0YWc6IGBoJHt0aGlzLnByb3BzLmxldmVsfWAsXG4gICAgICB0ZXh0OiB0aGlzLnByb3BzLnRleHQsXG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCB7IENvbXBvbmVudCwgdyB9IGZyb20gJy4uL1dvb24nO1xuaW1wb3J0IEluZm9HcmlkIGZyb20gJy4vSW5mb0dyaWQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCb2R5IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgYnVpbGQoKSB7XG4gICAgcmV0dXJuIHcoe1xuICAgICAgdGFnOiAnZGl2JyxcbiAgICAgIHN0eWxlczoge1xuICAgICAgICB3aWR0aDogJzcwJScsXG4gICAgICAgIG1heFdpZHRoOiAnMTIwMHB4JyxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnaHNsKDAsIDAlLCA5MCUpJyxcbiAgICAgICAgbWFyZ2luOiAnMCBhdXRvJyxcbiAgICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICAgIGRpc3BsYXk6ICdncmlkJyxcbiAgICAgICAgZ3JpZFRlbXBsYXRlUm93czogJzRmciAzZnInLFxuICAgICAgfSxcbiAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgIHcoe1xuICAgICAgICAgIHRhZzogJ2RpdicsXG4gICAgICAgICAgc3R5bGVzOiB7XG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnaHNsKDIxMSwgNzUlLCA1MCUpJyxcbiAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgdyh7IHRhZzogJ2gxJywgdGV4dDogJ0hlbGxvLCB3b3JsZCEnLCBzdHlsZXM6IHsgZm9udFNpemU6ICc4cmVtJyB9IH0pLFxuICAgICAgICAgICAgdyh7IHRhZzogJ3NwYW4nLCB0ZXh0OiAnVGhpcyBzaXRlIHdhcyBtYWRlIHVzaW5nIFdvb24uanMnLCBzdHlsZXM6IHsgZm9udFNpemU6ICcxLjVyZW0nIH0gfSksXG4gICAgICAgICAgXSxcbiAgICAgICAgfSksXG4gICAgICAgIG5ldyBJbmZvR3JpZCgpLFxuICAgICAgXSxcbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCB3IH0gZnJvbSAnLi4vV29vbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEluZm9HcmlkIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgYnVpbGQoKSB7XG4gICAgcmV0dXJuIHcoe1xuICAgICAgdGFnOiAnZGl2JyxcbiAgICAgIHN0eWxlczoge1xuICAgICAgICBkaXNwbGF5OiAnZ3JpZCcsXG4gICAgICAgIGdyaWRUZW1wbGF0ZUNvbHVtbnM6ICdyZXBlYXQoMiwgMWZyKScsXG4gICAgICB9LFxuICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgdyh7XG4gICAgICAgICAgdGFnOiAnYScsXG4gICAgICAgICAgc3R5bGVzOiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdoc2woMjExLCA4MCUsIDU4JSknLFxuICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICBjb2xvcjogJyNmZmYnLFxuICAgICAgICAgICAgdGV4dERlY29yYXRpb246ICdub25lJyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGF0dHJpYnV0ZXM6IHsgaHJlZjogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ldXNlYW53b29uMjAxNi93b29uLWpzJyB9LFxuICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICB3KHtcbiAgICAgICAgICAgICAgdGFnOiAnZGl2JyxcbiAgICAgICAgICAgICAgdGV4dDogJ1ZpZXcgb24gR2l0SHViJyxcbiAgICAgICAgICAgICAgc3R5bGVzOiB7IGZvbnRTaXplOiAnMnJlbScsIGZvbnRXZWlnaHQ6ICdib2xkJyB9LFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgXSxcbiAgICAgICAgfSksXG4gICAgICAgIHcoe1xuICAgICAgICAgIHRhZzogJ2EnLFxuICAgICAgICAgIHN0eWxlczoge1xuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnaHNsKDIxMSwgODAlLCA0NyUpJyxcbiAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgY29sb3I6ICcjZmZmJyxcbiAgICAgICAgICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBhdHRyaWJ1dGVzOiB7IGhyZWY6ICdodHRwczovL2dpdGh1Yi5jb20vZXVzZWFud29vbjIwMTYvd29vbi1qcy93aWtpJyB9LFxuICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICB3KHtcbiAgICAgICAgICAgICAgdGFnOiAnZGl2JyxcbiAgICAgICAgICAgICAgdGV4dDogJ1ZpZXcgV2lraScsXG4gICAgICAgICAgICAgIHN0eWxlczogeyBmb250U2l6ZTogJzJyZW0nLCBmb250V2VpZ2h0OiAnYm9sZCcgfSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgIF0sXG4gICAgICAgIH0pLFxuICAgICAgXSxcbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCB3IH0gZnJvbSAnLi4vV29vbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5hdkJhciBleHRlbmRzIENvbXBvbmVudCB7XG4gIGJ1aWxkKCkge1xuICAgIHJldHVybiB3KHtcbiAgICAgIHRhZzogJ25hdicsXG4gICAgICBzdHlsZXM6IHsgd2lkdGg6ICcxMDAlJywgYmFja2dyb3VuZENvbG9yOiAnaHNsKDIxMSwgMTAwJSwgNTYlKScsIGNvbG9yOiAnaHNsKDAsIDAlLCA5NiUpJyB9LFxuICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgdyh7XG4gICAgICAgICAgdGFnOiAnbmF2JyxcbiAgICAgICAgICBzdHlsZXM6IHtcbiAgICAgICAgICAgIHdpZHRoOiAnNzAlJyxcbiAgICAgICAgICAgIG1heFdpZHRoOiAnMTIwMHB4JyxcbiAgICAgICAgICAgIHBhZGRpbmc6ICcycmVtJyxcbiAgICAgICAgICAgIG1hcmdpbjogJzAgYXV0bycsXG4gICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgdyh7XG4gICAgICAgICAgICAgIHRhZzogJ2gxJyxcbiAgICAgICAgICAgICAgc3R5bGVzOiB7XG4gICAgICAgICAgICAgICAgdGV4dERlY29yYXRpb246ICdub25lJyxcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogJzEuNWVtJyxcbiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCcsXG4gICAgICAgICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAnMHB4JyxcbiAgICAgICAgICAgICAgICBtYXJnaW46ICcwcHgnLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzBweCcsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRleHQ6IHRoaXMucHJvcHMudGl0bGUsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICBdLFxuICAgICAgICB9KSxcbiAgICAgIF0sXG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG5pbXBvcnQgQm9keSBmcm9tICcuL2NvbXBvbmVudHMvQm9keSc7XG5pbXBvcnQgTmF2QmFyIGZyb20gJy4vY29tcG9uZW50cy9OYXZCYXInO1xuaW1wb3J0IFdvb24sIHsgQ29tcG9uZW50LCB3IH0gZnJvbSAnLi9Xb29uJztcblxuY2xhc3MgSG9tZVBhZ2UgZXh0ZW5kcyBDb21wb25lbnQge1xuICBpbml0KCkge31cblxuICBidWlsZCgpIHtcbiAgICByZXR1cm4gdyh7XG4gICAgICB0YWc6ICdkaXYnLFxuICAgICAgc3R5bGVzOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ2hzbCgwLCAwJSwgOTYlKScsXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgICBkaXNwbGF5OiAnZ3JpZCcsXG4gICAgICAgIGdyaWRUZW1wbGF0ZVJvd3M6ICdhdXRvIDFmcicsXG4gICAgICB9LFxuICAgICAgY2hpbGRyZW46IFtuZXcgTmF2QmFyKHsgdGl0bGU6ICdXb29uLmpzIEZyYW1ld29yaycgfSksIG5ldyBCb2R5KCldLFxuICAgIH0pO1xuICB9XG59XG5cbmNvbnN0IGFwcCA9IG5ldyBXb29uKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhcHAnKSwgbmV3IEhvbWVQYWdlKCkpO1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiLy8gbm8gYmFzZVVSSVxuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdFwibWFpblwiOiAwLFxuXHRcInN0eWxlc1wiOiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLk8uaiA9IChjaHVua0lkKSA9PiAoaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID09PSAwKTtcblxuLy8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG52YXIgd2VicGFja0pzb25wQ2FsbGJhY2sgPSAocGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24sIGRhdGEpID0+IHtcblx0dmFyIFtjaHVua0lkcywgbW9yZU1vZHVsZXMsIHJ1bnRpbWVdID0gZGF0YTtcblx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG5cdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuXHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwO1xuXHRpZihjaHVua0lkcy5zb21lKChpZCkgPT4gKGluc3RhbGxlZENodW5rc1tpZF0gIT09IDApKSkge1xuXHRcdGZvcihtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuXHRcdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcblx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0aWYocnVudGltZSkgdmFyIHJlc3VsdCA9IHJ1bnRpbWUoX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cdH1cblx0aWYocGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24pIHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uKGRhdGEpO1xuXHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuXHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJiBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcblx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSgpO1xuXHRcdH1cblx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZHNbaV1dID0gMDtcblx0fVxuXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5PKHJlc3VsdCk7XG59XG5cbnZhciBjaHVua0xvYWRpbmdHbG9iYWwgPSBzZWxmW1wid2VicGFja0NodW5rdHlwZXNjcmlwdF93ZWJwYWNrXCJdID0gc2VsZltcIndlYnBhY2tDaHVua3R5cGVzY3JpcHRfd2VicGFja1wiXSB8fCBbXTtcbmNodW5rTG9hZGluZ0dsb2JhbC5mb3JFYWNoKHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgMCkpO1xuY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjay5iaW5kKG51bGwsIGNodW5rTG9hZGluZ0dsb2JhbC5wdXNoLmJpbmQoY2h1bmtMb2FkaW5nR2xvYmFsKSk7IiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBkZXBlbmRzIG9uIG90aGVyIGxvYWRlZCBjaHVua3MgYW5kIGV4ZWN1dGlvbiBuZWVkIHRvIGJlIGRlbGF5ZWRcbnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXy5PKHVuZGVmaW5lZCwgW1wic3R5bGVzXCJdLCAoKSA9PiAoX193ZWJwYWNrX3JlcXVpcmVfXyhcIi4vc3JjL2luZGV4LnRzXCIpKSlcbl9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fLk8oX193ZWJwYWNrX2V4cG9ydHNfXyk7XG4iXSwibmFtZXMiOlsiZGVmZXJyZWQiLCJwcm9wcyIsInN0YXRlIiwib25DaGFuZ2UiLCJ0aGlzIiwiaW5pdCIsInNldFN0YXRlIiwia2V5IiwidmFsdWUiLCJnZXRTdGF0ZSIsImVudHJ5IiwiY29tcG9uZW50IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJyZW5kZXIiLCJ3cml0YWJsZSIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiYnVpbGQiLCJ3IiwidGFnIiwiYXR0cmlidXRlcyIsInN0eWxlcyIsInRleHQiLCJjaGlsZHJlbiIsImV2ZW50cyIsImVsZW1lbnQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjcmVhdGVUZXh0Tm9kZSIsImtleXMiLCJmb3JFYWNoIiwic2V0QXR0cmlidXRlIiwic3R5bGUiLCJjaGlsZCIsIkhUTUxFbGVtZW50IiwiQ29tcG9uZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJsZXZlbCIsIndpZHRoIiwibWF4V2lkdGgiLCJiYWNrZ3JvdW5kQ29sb3IiLCJtYXJnaW4iLCJjb2xvciIsImRpc3BsYXkiLCJncmlkVGVtcGxhdGVSb3dzIiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwiZmxleERpcmVjdGlvbiIsImZvbnRTaXplIiwiZ3JpZFRlbXBsYXRlQ29sdW1ucyIsInRleHREZWNvcmF0aW9uIiwiaHJlZiIsImZvbnRXZWlnaHQiLCJwYWRkaW5nIiwidGV4dEFsaWduIiwiYm9yZGVyIiwidGl0bGUiLCJoZWlnaHQiLCJxdWVyeVNlbGVjdG9yIiwiSG9tZVBhZ2UiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJPIiwicmVzdWx0IiwiY2h1bmtJZHMiLCJmbiIsInByaW9yaXR5Iiwibm90RnVsZmlsbGVkIiwiSW5maW5pdHkiLCJpIiwibGVuZ3RoIiwiZnVsZmlsbGVkIiwiaiIsImV2ZXJ5Iiwic3BsaWNlIiwiciIsImQiLCJkZWZpbml0aW9uIiwibyIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJpbnN0YWxsZWRDaHVua3MiLCJjaHVua0lkIiwid2VicGFja0pzb25wQ2FsbGJhY2siLCJwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiIsImRhdGEiLCJtb3JlTW9kdWxlcyIsInJ1bnRpbWUiLCJzb21lIiwiaWQiLCJjaHVua0xvYWRpbmdHbG9iYWwiLCJzZWxmIiwiYmluZCIsInB1c2giLCJfX3dlYnBhY2tfZXhwb3J0c19fIl0sInNvdXJjZVJvb3QiOiIifQ==